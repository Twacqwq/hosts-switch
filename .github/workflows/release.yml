name: Release

on:

  release:

    types: [ created ]

jobs:

  build:

    strategy:
      matrix:
        include:
          - runs-on: ubuntu-latest
            binary-name: hosts-switch_linux_amd64_${{ github.ref_name }}
            binary-path: ./build/linux/
            format: '.deb'

    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: v16.14.2
          registry-url: https://registry.npmjs.com/

      - name: Install Vue Dependencies
        run: |
          cd frontend
          npm install

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Set up Environment
        run: |
          sudo apt-get install libwebkit2gtk-4.0-dev
          sudo apt install libgtk-3-dev
          sudo apt install nsis
          go install github.com/wailsapp/wails/v2/cmd/wails@v2.0.0-beta.43

      - name: Check Environment
        run: wails doctor

      - name: Build
        if: ${{ matrix.runs-on == 'ubuntu-latest' }}
        run: |
          cd scripts
          sh build-linux-deb.sh ${{ github.ref_name }}

      - name: Archive Release
        uses: thedoctor0/zip-release@main
        with:
          type: zip
          filename: ${{ matrix.binary-name }}.zip
          directory: ${{ matrix.binary-path }}
          path: .
          # exclusions: '*.git* /*node_modules/* .editorconfig'

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ matrix.binary-path }}${{ matrix.binary-name }}${{ matrix.format }}
          asset_name: ${{ matrix.binary-name }}${{ matrix.format }}
          asset_content_type: application/octet-stream

      - name: Upload Release Zip Asset
        id: upload-release-zip-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ matrix.binary-path }}${{ matrix.binary-name }}.zip
          asset_name: ${{ matrix.binary-name }}.zip
          asset_content_type: application/zip
